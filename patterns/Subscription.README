############################################################################
#                                                                          #
# Copyright (c) 1993-1994 CASPUR Consortium                                # 
#                         c/o Universita' "La Sapienza", Rome, Italy       #
# All rights reserved.                                                     #
#                                                                          #
# Permission is hereby granted, without written agreement and without      #
# license or royalty fees, to use, copy, modify, and distribute this       #
# software and its documentation for any purpose, provided that the        #
# above copyright notice and the following two paragraphs and the team     #
# reference appear in all copies of this software.                         #
#                                                                          #
# IN NO EVENT SHALL THE CASPUR CONSORTIUM BE LIABLE TO ANY PARTY FOR       #
# DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING  #
# OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE       #
# CASPUR CONSORTIUM HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    #
#                                                                          #
# THE CASPUR CONSORTIUM SPECIFICALLY DISCLAIMS ANY WARRANTIES,             #
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY #
# AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER   #
# IS ON AN "AS IS" BASIS, AND THE CASPUR CONSORTIUM HAS NO OBLIGATION TO   #
# PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.   #
#                                                                          #
#       +----------------------------------------------------------+       #
#       |   The ControlHost Team: Ruten Gurin, Andrei Maslennikov  |       #
#       |   Contact e-mail      : ControlHost@caspur.it            |       #
#       +----------------------------------------------------------+       #
#                                                                          #
############################################################################

$Id: Subscription.README,v 1.3 1995/03/20 23:13:05 ruten Exp $

Subscription mechanism in dispatcher

------------------------------------

1. How to subscribe

   Initial subscription is done when you connect to dispatcher,
     see the description of init_disp_link and init_2disp_link
     routines in Interf.README.

   Subscription may be changed at any moment,
     see the description of resubscribe
     routine in Interf.README.

2. What is subscription list

   Subscription list is a character string containing pairs -
   flags tag flags tag ...., e.g.

     "a DAQERROR am EVENT"

   The possible flags are:
      a - you need ALL the data with the given tag.
          The data portion cannot be dropped from
          dispatcher memory until it is delivered to you.
         USE THIS FLAG VERY CAUTIOUSLY!!!!
         Your application must be fast enough to process
         all the incoming data, or you will block the dispatcher
         completely.
      
      s - you need it SYNCHRONOUSLY.  If several processes want some
          tag synchronously, the corresponding data portions will be
          delivered to them only when all of them are ready to accept it.
          Don't use send_me_always routine in such a process,
          otherwise the dispatcher treats the process as always ready!

      m - you need it via shared MEMORY. 
          Dispatcher will try to send only the pointer into shared
          memory instead of the data, though it's not guaranteed. 
          This option is meaningful only if you run your application 
          on the same host with the dispatcher, for if you use it 
          from remote client you will still get the data themselves, 
          not the pointer.

    Any combination of a,m,s may be used, e.g.: "am EVENT".
    If you don't need any of this options, use flag 'w', e.g.: "w EVENT".
    Historicaly, there are two additional flags, which I don't remove for
    backward compatibility reasons:
       W (== m), S (== sm).

    Subscription list may also be empty: "" in C and ' ' in Fortran.
    It means you want only send something to dispatcher, without receiving
    anything.      
