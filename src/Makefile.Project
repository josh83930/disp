############################################################################
#                                                                          #
# Copyright (c) 1993-1994 CASPUR Consortium                                # 
#                         c/o Universita' "La Sapienza", Rome, Italy       #
# All rights reserved.                                                     #
#                                                                          #
# Permission is hereby granted, without written agreement and without      #
# license or royalty fees, to use, copy, modify, and distribute this       #
# software and its documentation for any purpose, provided that the        #
# above copyright notice and the following two paragraphs and the team     #
# reference appear in all copies of this software.                         #
#                                                                          #
# IN NO EVENT SHALL THE CASPUR CONSORTIUM BE LIABLE TO ANY PARTY FOR       #
# DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING  #
# OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE       #
# CASPUR CONSORTIUM HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    #
#                                                                          #
# THE CASPUR CONSORTIUM SPECIFICALLY DISCLAIMS ANY WARRANTIES,             #
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY #
# AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER   #
# IS ON AN "AS IS" BASIS, AND THE CASPUR CONSORTIUM HAS NO OBLIGATION TO   #
# PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.   #
#                                                                          #
#       +----------------------------------------------------------+       #
#       |   The ControlHost Team: Ruten Gurin, Andrei Maslennikov  |       #
#       |   Contact e-mail      : ControlHost@caspur.it            |       #
#       +----------------------------------------------------------+       #
#                                                                          #
############################################################################


# $Id: Makefile.Project,v 1.36 1996/05/15 09:44:10 ruten Exp $

# Makefile to create socket communication support library
# and main dispatcher program

BINDIR = $(VPATH)/../bin
LIBDIR = $(VPATH)/../lib

ifeq ($(SYS),HP_UX)
 USE_LOCAL_COMPILER = no
endif

ifeq ($(SYS),SunOS)
 USE_LOCAL_COMPILER = no
endif

include $(VPATH)/../patterns/Options.Makefile

LIBNICK = conthost
L = lib$(LIBNICK).so

ifeq ($(SYS),Linux)
  TCLINCLUDE = -I/usr/include/tcl
else
  TCLINCLUDE = -I/usr/local/include
endif

TCLEXTLIB =
ifneq ($(SYS),IRIX)
  ifneq ($(SYS),Linux)
    TCLEXTLIB = -L/usr/local/lib -ltclx -ltkx
  endif
endif

ifeq ($(SYS),Linux)
  TCLLIB = $(TCLEXTLIB) -ltcl -ltk -lXpm -lm -lX11
else
  TCLLIB = $(TCLEXTLIB) -L/usr/local/lib -ltcl -ltk -lXpm -lm -lX11
endif

vpath %.h $(VPATH)/../include

vpath %.c $(VPATH)/../external
vpath %.c $(VPATH)/../patterns

CFLAGS_PROJECT = -I$(VPATH)/../include -fPIC
CXXFLAGS_PROJECT = $(CFLAGS_PROJECT)
LDFLAGS_PROJECT = -L$(LIBDIR) -l$(LIBNICK)
LDXXFLAGS_PROJECT = $(LDFLAGS_PROJECT)

% : %.o
	@mkdir -p $(BINDIR)
	$(CC) -o $(BINDIR)/$@ $(filter %.o,$^) $(LDFLAGS)
#	strip $@

# low level socket support routines, signal processing, 
# application specific routines 
#OBJ_S = socketp.o tcpio.o siglist.o tcpsig.o missing.o fortsupp.o ascebcd.o tclsupp.o
OBJ_S = socketp.o tcpio.o siglist.o tcpsig.o missing.o fortsupp.o ascebcd.o
OBJ_S = socketp.o tcpio.o siglist.o tcpsig.o missing.o fortsupp2.o ascebcd.o

# shared memory support, low level tagged communication support,
# high level interface for communications with dispatcher
OBJ_M = shmem_ad.o tagbl.o getdata.o shmem_sock.o disploop.o dispreact.o

# dispatcher components
OBJ_D = dispatch.o client.o info.o tag.o reactions.o

# heap managment
OBJ_H = shmem.o

# utilities obj files
#OBJ_U = dispstat.o stopdisp.o sendcmd.o findclient.o tcldisp.o pat_tcl_user.o \
#        bdexpander.o bdcollector.o findclient.o
OBJ_U = dispstat.o stopdisp.o sendcmd.o findclient.o \
        bdexpander.o bdcollector.o findclient.o

# utilities
#UTEXE = dispatch dispstat stopdisp sendcmd findclient bdexpander bdcollector tcldisp
UTEXE = dispatch dispstat stopdisp sendcmd findclient bdexpander bdcollector

CH = dispatch.h displowl.h disploop.h socksupp.h
CCH = headers.h shmem.h $(CH)

ALL = $(L) $(UTEXE)

all: $(ALL)

clean::
	-rm -f $(ALL) $(OBJ_S) $(OBJ_M) $(OBJ_H) $(OBJ_D) $(OBJ_U)

# specific additions
ifneq ($(wildcard $(VPATH)/Adds.Makefile),)
include $(VPATH)/Adds.Makefile
endif

$(L): $(OBJ_S) $(OBJ_M)
	@mkdir -p $(LIBDIR)
	$(CC) -shared -o $(LIBDIR)/$@ $?
	
dispatch:
	$(CXX) -o $@ $(filter %.o,$^) $(LDXXFLAGS)
#	strip $@

#tcldisp: tcldisp.o pat_tcl_user.o $(L)
#	$(CC) -o $@ $(filter %.o,$^) $(LDFLAGS) $(TCLLIB)
#	strip $@
#
#tcldisp.o tclsupp.o pat_tcl_user.o: %.o : %.c
#	$(CC) $(CFLAGS) $(TCLINCLUDE) -c -o $@ $<

$(OBJ_S): socksupp.h

$(OBJ_D): $(CCH)

$(OBJ_H): shmem.h

$(OBJ_M): $(CH)

$(OBJ_U): $(CH)

disphost.o getdata.o fortsupp.o : fortsupp.h

$(UTEXE): $(L)

dispatch: $(OBJ_D) $(OBJ_H)

#tcldisp.o pat_tcl_user.o: tcldisp.h

#tcldisp.o tclsupp.o pat_tcl_user.o: tclsupp.h
